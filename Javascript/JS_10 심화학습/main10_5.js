// 불변성(Immutability)은 생성된 데이터가 메모리에서 변경되지 않는 것을,
// 가변성(Mutability)은 생성된 데이터가 메모리에서 변경될 수 있음을 의미합니다.
// 원시형(문자, 숫자 불린, null, undefined)은 불변성,
// 참조형(배열, 객체, 함수)은 가변성을 가지고 있습니다.

const a = 1
// 변수 a에 '1'값 메모리 주소 할당(M1을 저장됨)
let b = a
// 변수 b에 a의 메모리 주소를 할당
b = 2
// 새롭게 변수 b에 '2'값 메모리 주소를 할당(M2에 저장됨)
console.log(a) // 1
console.log(b) // 2

// 참조형
const c = { x: 1, y: 2}
// 변수 c에 객체 데이터 x에 '1', y에 '2' 메모리 할당(M3에 저장됨)
// x에 '1'을 할당 하지만 메모리상 '1'은 M1에 존재하기에 x는 M1의 메모리주소를 읽어오게 됨
// y에 '2'를 할당 하지만 메모리상 '2'은 M2에 존재하기에 y는 M2의 메모리주소를 읽어오게 됨
const d = c
// 변수 d에 c의 메모리주소를 할당(M3를 읽어오게 됨)

d.x = 99
// 가변성으로 d(c의 메모리주소)의 x값에 '99'를 할당(M4에 저장됨)
// d의 x값에 99를 할당 함으로써 M3의 객체{x: M3, y: M2} 를 읽어오게 됨
console.log(c) // {x: 99, y: 2}
// M3에 x값이 M4를 읽어오게 되어 있으므로 x값이 '99'로 표현된다
console.log(d) // {x: 99, y: 2}

const e = [1, 2, 3]
// 변수 e에 배열 데이터 [1, 2, 3]값 메모리 주소 할당(M5에 저장됨)
// 배열데이터 값 [1, 2]는 각각 M1과 M2에 할당되어 있으므로 [M1, M2]로 메모리주소를 읽어오게됨
// 또한 배열데이터 [3]값은 M6에 저장되어 변수 e는 [M1, M2, M6]를 읽어오게 된다.
const f = e
// 변수 e에 f의 메모리 주소를 할당
f[0] = 99
// f의 0번째 아이템(인덱싱)에 '99'를 할당
// '99'값은 M4 메모리에 할당되어 있으므로 [M4, M2, M6] 메모리주소를 읽어오게 됨
console.log(e) // [99, 2, 3]
console.log(f) // [99, 2, 3]

console.log("=========구분선=========")

const user = {
  name: 'Neo',
  age: 85,
  emails: ['neo@heropy.dev', 'neo@gmial.com', 'neo@naver.com']
}
// user의 객체데이터가 M7 메모리주소에 저장되며
// name의 'Neo'데이터는 M8의 메모리주소에 저장
// age의 '85'데이터는 M9의 메모리주소에 저장
// emails의 []배열데이터는 M10의 메모리주소에 저장되지만
// []배열데이터의 각 데이터도 따로 메모리에 저장된다
// 배열데이터의 neo@heropy.dev 데이터는 M11메모리에 저장
// 배열데이터의 neo@gmial.com 데이터는 M12메모리에 저장
// 배열데이터의 neo@naver.com 데이터는 M13메모리에 저장

console.log(user)

let { name, age, emails } = user
name = 'Evan'
// Evan이 해당한 메모리주소가 없으므로 M14 메모리에 저장되나
// 기존 name이라는 변수는 M8를 읽어들였으나 이제 M14를 읽도록 바뀜
age = 123
// a123이 해당한 메모리주소가 없으므로 M15 메모리에 저장되나
// 기존 age라는 변수는 M9를 읽었으나 이제 M15를 읽도록 바뀜

emails = [...emails] // 복사!
// emails의 새로운 배열데이터로 할당하여 M16 메모리주소에 저장
// 이제 emails는 M10메모리주소를 읽어드림


emails.splice(1, 2)
// 1번째부터 2개의 아이템을 삭제
// splice()메소드는 원본 배열데이터를 수정함

// emails = [...emails]가 없을 경우
// emails가 읽고있던 M10번 메모리주소에서 1번째 부터 2번째를 삭제하여 [M11]만 남김
// 이러면 M7메모리주소가 읽던 M10번에 해당하는 값이 바뀌었기 때문에 문제가 발생

// emails = [...emails]가 있는 경우
// emails가 읽고있던 M10번 메모리주소가 아닌 M16번 메모리주소를 읽어드림
// 그러므로 M7이 읽고있던 M10 메모리주소는 유지되고 M16번의 메모리주소에 해당하는 배열데이터 값이 [M11]만 남김

console.log(name, age, emails)
console.log(user)